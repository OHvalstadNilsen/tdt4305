//Load in file
val db = sc.textFile("geotweets.tsv")
val tweets = db.map(_.split('\t'))

//1a - Number of tweets
db.count()

//1b - Number of distinct users
tweets.map(x => x(6)).distinct().count();

//1c - Number of distinct countries
tweets.map(x => x(1)).distinct().count();

//1d - Number of distinct places
tweets.map(x => x(4)).distinct().count();

//1e - Number of distinct languages
tweets.map(x => x(5)).distinct().count();

//1f - Minimum latitude
val lats = tweets.map(x => x(11).toFloat);
lats.min()

//1g - Minimum longitude
val longs = tweets.map(x => x(12).toFloat);
longs.min()

//1h - Maximum latitude
lats.max()

//1i - Maximum longitude
longs.max()

//1j - Average characters in tweets
val tweetTexts = tweets.map(x => x(10));
val tweetCount = tweetTexts.count().toFloat;
tweetTexts.map(x => x.length).reduce((x,y) => x+y) / tweetCount

//1k - Average words in tweets
tweetTexts.map(_.split(' ')).map(x => x.length).reduce((x,y) => x + y) / tweetCount
